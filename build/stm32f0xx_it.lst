ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cccrXRii.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB40:
  26              		.file 1 "Core/Src/stm32f0xx_it.c"
   1:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f0xx_it.c **** /**
   3:Core/Src/stm32f0xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   5:Core/Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f0xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f0xx_it.c ****   * @attention
   8:Core/Src/stm32f0xx_it.c ****   *
   9:Core/Src/stm32f0xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f0xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f0xx_it.c ****   *
  12:Core/Src/stm32f0xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f0xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f0xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f0xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f0xx_it.c ****   *
  17:Core/Src/stm32f0xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f0xx_it.c ****   */
  19:Core/Src/stm32f0xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f0xx_it.c **** 
  21:Core/Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f0xx_it.c **** #include "main.h"
  23:Core/Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  24:Core/Src/stm32f0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f0xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f0xx_it.c **** 
  28:Core/Src/stm32f0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f0xx_it.c **** 
  31:Core/Src/stm32f0xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f0xx_it.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cccrXRii.s 			page 2


  33:Core/Src/stm32f0xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f0xx_it.c **** 
  36:Core/Src/stm32f0xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f0xx_it.c **** 
  38:Core/Src/stm32f0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f0xx_it.c **** 
  41:Core/Src/stm32f0xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f0xx_it.c **** 
  43:Core/Src/stm32f0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f0xx_it.c **** 
  46:Core/Src/stm32f0xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f0xx_it.c **** 
  48:Core/Src/stm32f0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f0xx_it.c **** 
  51:Core/Src/stm32f0xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f0xx_it.c **** 
  53:Core/Src/stm32f0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f0xx_it.c **** 
  56:Core/Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f0xx_it.c **** 
  58:Core/Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f0xx_it.c **** extern TIM_HandleTypeDef htim15;
  60:Core/Src/stm32f0xx_it.c **** extern TIM_HandleTypeDef htim16;
  61:Core/Src/stm32f0xx_it.c **** extern TIM_HandleTypeDef htim17;
  62:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN EV */
  63:Core/Src/stm32f0xx_it.c **** 
  64:Core/Src/stm32f0xx_it.c **** /* USER CODE END EV */
  65:Core/Src/stm32f0xx_it.c **** 
  66:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
  67:Core/Src/stm32f0xx_it.c **** /*           Cortex-M0 Processor Interruption and Exception Handlers          */
  68:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32f0xx_it.c **** /**
  70:Core/Src/stm32f0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  71:Core/Src/stm32f0xx_it.c ****   */
  72:Core/Src/stm32f0xx_it.c **** void NMI_Handler(void)
  73:Core/Src/stm32f0xx_it.c **** {
  27              		.loc 1 73 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  74:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  75:Core/Src/stm32f0xx_it.c **** 
  76:Core/Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  78:Core/Src/stm32f0xx_it.c ****   while (1)
  34              		.loc 1 78 3 discriminator 1 view .LVU1
  79:Core/Src/stm32f0xx_it.c ****   {
  80:Core/Src/stm32f0xx_it.c ****   }
  35              		.loc 1 80 3 discriminator 1 view .LVU2
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cccrXRii.s 			page 3


  78:Core/Src/stm32f0xx_it.c ****   {
  36              		.loc 1 78 9 discriminator 1 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE40:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.code	16
  46              		.thumb_func
  47              		.fpu softvfp
  49              	HardFault_Handler:
  50              	.LFB41:
  81:Core/Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  82:Core/Src/stm32f0xx_it.c **** }
  83:Core/Src/stm32f0xx_it.c **** 
  84:Core/Src/stm32f0xx_it.c **** /**
  85:Core/Src/stm32f0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  86:Core/Src/stm32f0xx_it.c ****   */
  87:Core/Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  88:Core/Src/stm32f0xx_it.c **** {
  51              		.loc 1 88 1 view -0
  52              		.cfi_startproc
  53              		@ Volatile: function does not return.
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.L4:
  89:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  90:Core/Src/stm32f0xx_it.c **** 
  91:Core/Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  92:Core/Src/stm32f0xx_it.c ****   while (1)
  58              		.loc 1 92 3 discriminator 1 view .LVU5
  93:Core/Src/stm32f0xx_it.c ****   {
  94:Core/Src/stm32f0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  95:Core/Src/stm32f0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  96:Core/Src/stm32f0xx_it.c ****   }
  59              		.loc 1 96 3 discriminator 1 view .LVU6
  92:Core/Src/stm32f0xx_it.c ****   {
  60              		.loc 1 92 9 discriminator 1 view .LVU7
  61 0000 FEE7     		b	.L4
  62              		.cfi_endproc
  63              	.LFE41:
  65              		.section	.text.SVC_Handler,"ax",%progbits
  66              		.align	1
  67              		.global	SVC_Handler
  68              		.syntax unified
  69              		.code	16
  70              		.thumb_func
  71              		.fpu softvfp
  73              	SVC_Handler:
  74              	.LFB42:
  97:Core/Src/stm32f0xx_it.c **** }
  98:Core/Src/stm32f0xx_it.c **** 
  99:Core/Src/stm32f0xx_it.c **** /**
 100:Core/Src/stm32f0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cccrXRii.s 			page 4


 101:Core/Src/stm32f0xx_it.c ****   */
 102:Core/Src/stm32f0xx_it.c **** void SVC_Handler(void)
 103:Core/Src/stm32f0xx_it.c **** {
  75              		.loc 1 103 1 view -0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
 104:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 105:Core/Src/stm32f0xx_it.c **** 
 106:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 107:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 108:Core/Src/stm32f0xx_it.c **** 
 109:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 110:Core/Src/stm32f0xx_it.c **** }
  80              		.loc 1 110 1 view .LVU9
  81              		@ sp needed
  82 0000 7047     		bx	lr
  83              		.cfi_endproc
  84              	.LFE42:
  86              		.section	.text.PendSV_Handler,"ax",%progbits
  87              		.align	1
  88              		.global	PendSV_Handler
  89              		.syntax unified
  90              		.code	16
  91              		.thumb_func
  92              		.fpu softvfp
  94              	PendSV_Handler:
  95              	.LFB43:
 111:Core/Src/stm32f0xx_it.c **** 
 112:Core/Src/stm32f0xx_it.c **** /**
 113:Core/Src/stm32f0xx_it.c ****   * @brief This function handles Pendable request for system service.
 114:Core/Src/stm32f0xx_it.c ****   */
 115:Core/Src/stm32f0xx_it.c **** void PendSV_Handler(void)
 116:Core/Src/stm32f0xx_it.c **** {
  96              		.loc 1 116 1 view -0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 117:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 118:Core/Src/stm32f0xx_it.c **** 
 119:Core/Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 120:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 121:Core/Src/stm32f0xx_it.c **** 
 122:Core/Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 123:Core/Src/stm32f0xx_it.c **** }
 101              		.loc 1 123 1 view .LVU11
 102              		@ sp needed
 103 0000 7047     		bx	lr
 104              		.cfi_endproc
 105              	.LFE43:
 107              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 108              		.align	1
 109              		.global	HAL_TIM_PeriodElapsedCallback
 110              		.syntax unified
 111              		.code	16
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cccrXRii.s 			page 5


 112              		.thumb_func
 113              		.fpu softvfp
 115              	HAL_TIM_PeriodElapsedCallback:
 116              	.LVL0:
 117              	.LFB44:
 124:Core/Src/stm32f0xx_it.c **** 
 125:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
 126:Core/Src/stm32f0xx_it.c **** /* STM32F0xx Peripheral Interrupt Handlers                                    */
 127:Core/Src/stm32f0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 128:Core/Src/stm32f0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 129:Core/Src/stm32f0xx_it.c **** /* please refer to the startup file (startup_stm32f0xx.s).                    */
 130:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
 131:Core/Src/stm32f0xx_it.c **** 
 132:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN 1 */
 133:Core/Src/stm32f0xx_it.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 134:Core/Src/stm32f0xx_it.c **** {
 118              		.loc 1 134 1 view -0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		.loc 1 134 1 is_stmt 0 view .LVU13
 123 0000 10B5     		push	{r4, lr}
 124              	.LCFI0:
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 4, -8
 127              		.cfi_offset 14, -4
 128 0002 0400     		movs	r4, r0
 135:Core/Src/stm32f0xx_it.c ****     if(htim->Instance == TIM15)
 129              		.loc 1 135 5 is_stmt 1 view .LVU14
 130              		.loc 1 135 7 is_stmt 0 view .LVU15
 131 0004 0A4B     		ldr	r3, .L14
 132 0006 0268     		ldr	r2, [r0]
 133 0008 9A42     		cmp	r2, r3
 134 000a 08D0     		beq	.L11
 135              	.LVL1:
 136              	.L8:
 136:Core/Src/stm32f0xx_it.c ****     {
 137:Core/Src/stm32f0xx_it.c ****         Os_Handler_10ms();
 138:Core/Src/stm32f0xx_it.c ****     }
 139:Core/Src/stm32f0xx_it.c ****     if(htim->Instance == TIM16)
 137              		.loc 1 139 5 is_stmt 1 view .LVU16
 138              		.loc 1 139 7 is_stmt 0 view .LVU17
 139 000c 094B     		ldr	r3, .L14+4
 140 000e 2268     		ldr	r2, [r4]
 141 0010 9A42     		cmp	r2, r3
 142 0012 07D0     		beq	.L12
 143              	.L9:
 140:Core/Src/stm32f0xx_it.c ****     {
 141:Core/Src/stm32f0xx_it.c ****         Os_Time_Handler();
 142:Core/Src/stm32f0xx_it.c ****     }
 143:Core/Src/stm32f0xx_it.c ****     if(htim->Instance == TIM17)
 144              		.loc 1 143 5 is_stmt 1 view .LVU18
 145              		.loc 1 143 12 is_stmt 0 view .LVU19
 146 0014 2268     		ldr	r2, [r4]
 147              		.loc 1 143 7 view .LVU20
 148 0016 084B     		ldr	r3, .L14+8
 149 0018 9A42     		cmp	r2, r3
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cccrXRii.s 			page 6


 150 001a 06D0     		beq	.L13
 151              	.L7:
 144:Core/Src/stm32f0xx_it.c ****     {
 145:Core/Src/stm32f0xx_it.c ****         Os_Handler_1ms();
 146:Core/Src/stm32f0xx_it.c ****     }
 147:Core/Src/stm32f0xx_it.c **** }
 152              		.loc 1 147 1 view .LVU21
 153              		@ sp needed
 154              	.LVL2:
 155              		.loc 1 147 1 view .LVU22
 156 001c 10BD     		pop	{r4, pc}
 157              	.LVL3:
 158              	.L11:
 159              	.LBB2:
 137:Core/Src/stm32f0xx_it.c ****     }
 160              		.loc 1 137 9 is_stmt 1 view .LVU23
 161 001e FFF7FEFF 		bl	Os_Handler_10ms
 162              	.LVL4:
 137:Core/Src/stm32f0xx_it.c ****     }
 163              		.loc 1 137 9 is_stmt 0 view .LVU24
 164 0022 F3E7     		b	.L8
 165              	.L12:
 137:Core/Src/stm32f0xx_it.c ****     }
 166              		.loc 1 137 9 view .LVU25
 167              	.LBE2:
 168              	.LBB3:
 141:Core/Src/stm32f0xx_it.c ****     }
 169              		.loc 1 141 9 is_stmt 1 view .LVU26
 170 0024 FFF7FEFF 		bl	Os_Time_Handler
 171              	.LVL5:
 172 0028 F4E7     		b	.L9
 173              	.L13:
 141:Core/Src/stm32f0xx_it.c ****     }
 174              		.loc 1 141 9 is_stmt 0 view .LVU27
 175              	.LBE3:
 176              	.LBB4:
 145:Core/Src/stm32f0xx_it.c ****     }
 177              		.loc 1 145 9 is_stmt 1 view .LVU28
 178 002a FFF7FEFF 		bl	Os_Handler_1ms
 179              	.LVL6:
 180              	.LBE4:
 181              		.loc 1 147 1 is_stmt 0 view .LVU29
 182 002e F5E7     		b	.L7
 183              	.L15:
 184              		.align	2
 185              	.L14:
 186 0030 00400140 		.word	1073823744
 187 0034 00440140 		.word	1073824768
 188 0038 00480140 		.word	1073825792
 189              		.cfi_endproc
 190              	.LFE44:
 192              		.text
 193              	.Letext0:
 194              		.file 2 "d:\\3.tools\\arm_gcc_toolchain\\20_q4_major\\arm-none-eabi\\include\\machine\\_default_ty
 195              		.file 3 "d:\\3.tools\\arm_gcc_toolchain\\20_q4_major\\arm-none-eabi\\include\\sys\\_stdint.h"
 196              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f070xb.h"
 197              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cccrXRii.s 			page 7


 198              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 199              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cccrXRii.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_it.c
C:\Users\jisu8\AppData\Local\Temp\cccrXRii.s:16     .text.NMI_Handler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cccrXRii.s:24     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\jisu8\AppData\Local\Temp\cccrXRii.s:42     .text.HardFault_Handler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cccrXRii.s:49     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\jisu8\AppData\Local\Temp\cccrXRii.s:66     .text.SVC_Handler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cccrXRii.s:73     .text.SVC_Handler:00000000 SVC_Handler
C:\Users\jisu8\AppData\Local\Temp\cccrXRii.s:87     .text.PendSV_Handler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cccrXRii.s:94     .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\jisu8\AppData\Local\Temp\cccrXRii.s:108    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cccrXRii.s:115    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\jisu8\AppData\Local\Temp\cccrXRii.s:186    .text.HAL_TIM_PeriodElapsedCallback:00000030 $d

UNDEFINED SYMBOLS
Os_Handler_10ms
Os_Time_Handler
Os_Handler_1ms
